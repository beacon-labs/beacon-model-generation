
/*
 * BLInstanceBase
 * ------------------------------
 * An instance of a design
 *
 * IMPORTANT NOTE: DO NOT EDIT THIS FILE, edit bl_instance.cpp instead
 *
 */

#pragma once

using namespace std;

#include <memory>
#include "bl_observer.h"
#include <list>
#include <string>
#include <list>
class BLDesign;
class BLPin;

class BLInstanceBase
{
    
    string name;
    list<shared_ptr<IBLObserver<string>>> name_observers;
    
    shared_ptr<BLDesign> reference;
    list<shared_ptr<IBLObserver<shared_ptr<BLDesign>>>> reference_observers;
    
    list<shared_ptr<BLPin>> pins;
    list<shared_ptr<IBLObserver<shared_ptr<BLPin>>>> pins_observers;
    
public:
    
    string get_name();
    void observe_name(shared_ptr<IBLObserver<string>> observer);
    void set_name(string value);
    
    shared_ptr<BLDesign> get_reference();
    void observe_reference(shared_ptr<IBLObserver<shared_ptr<BLDesign>>> observer);
    void set_reference(shared_ptr<BLDesign> value);
    
    list<shared_ptr<BLPin>> get_pins();
    void observe_pins(shared_ptr<IBLObserver<shared_ptr<BLPin>>> observer);
    void add_pin(shared_ptr<BLPin> value);
    
    

};
